@using Hara.UI.Services
@inherits BlazorTransitionableRoute.TransitionableLayoutComponent
@inject UIStateService UIStateService
<div class="transition @TransitionClass">
    @Body
</div>

<style>
 .transition {
     width: 100%;
     height: 100%;
     position: absolute;
     margin-top: 60px;
     z-index:1;
 }
  .transition.out {
      z-index:0;
  }
 .transition.out.slide-in {
     animation: slide-back 0.5s forwards;
     -webkit-animation: slide-back 0.5s forwards;
 }
 .transition:not(.out).slide-in {
     transform: translateX(100%);
 }
 .transition:not(.out).slide-out {
     transform: translateX(-100%);
 }
 .transition:not(.out) {
     animation: slide-into-view 0.25s forwards;
     -webkit-animation: slide-into-view 0.25s forwards;
 }
 .transition.out.slide-out {
     animation: slide-forward 0.5s forwards;
     -webkit-animation: slide-forward 0.5s forwards;
 }
 
 @@keyframes slide-into-view {
     100% {
         transform: translateX(0);
     }
 }
 @@keyframes slide-back {
     100% {
         transform: translateX(-100%);
     }
 }
 @@keyframes slide-forward {
     100% {
         transform: translateX(100%);
     }
 }
 
</style>

@code {

    private string TransitionClass
    {
        get
        {
            var res = "";
            if (!Transition.FirstRender)
            {
                if (!Transition.IntoView)
                {
                    res += "out ";
                }
                Console.WriteLine($"{Transition.IntoView} , {Transition.Backwards}, {Transition.FirstRender}");
                res += Transition.Backwards ? "slide-out" : "slide-in";
                
            }
            
            Console.WriteLine($"{res}");
            return res;
        }
    }

}