@page "/instances/create"
@using BlazingPay.UI.Services
@using System.ComponentModel.DataAnnotations
@using BTCPayServer.Client
@using Microsoft.AspNetCore.WebUtilities

@inject NavigationManager _navigationManager
@inject UIStateService UiStateService

<IonContent class="ion-padding">
    <EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <IonList>
            <IonItem ValidationField="() => Label">
                <IonLabel>Label</IonLabel>
                <IonInput @bind-Value="Label"></IonInput>
            </IonItem>
            <IonValidationMessage ValidationField="() => Label"></IonValidationMessage>
            <IonItem ValidationField="() => Url">
                <IonLabel>Url</IonLabel>
                <IonInput @bind-Value="Url"></IonInput>
            </IonItem>
            <IonValidationMessage ValidationField="() => Url"></IonValidationMessage>
            @if (!string.IsNullOrEmpty(Url) && Uri.TryCreate(Url, UriKind.Absolute, out var instanceUrl))
            {
                var current = new Uri ( QueryHelpers.AddQueryString(
                    QueryHelpers
                    .AddQueryString(_navigationManager.Uri, "host", Url),
                     "label", Label));
               ;
               var url = BTCPayServerClient.GenerateAuthorizeUri(instanceUrl, new string[0], false, true, ("BlazingPay", current));
                <a href="@url"> Authorize</a>
            }
            <IonItem ValidationField="() => ApiKey">
                <IonLabel>Api Key</IonLabel>
                <IonInput @bind-Value="ApiKey"></IonInput>
            </IonItem>
            <IonValidationMessage ValidationField="() => ApiKey"></IonValidationMessage>
        </IonList>
        <IonButton type="submit" disabled="@Submitted">Submit</IonButton>
    </EditForm>
</IonContent>


<IonToast @bind-Visible="Submitted" message="Form submitted and validated!"></IonToast>

@code {

    public bool Submitted { get; set; }

    [Required]
    public string Label { get; set; }

    [Required]
    [Url]
    public string Url { get; set; }

    [Required]
    public string ApiKey { get; set; }

    EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(this);
        UiStateService.Title = "Connect to a BTCPay Server instance";

        if(_navigationManager.TryGetQueryString<string>("host", out var host))
        {
            Url = host;
        }
        if(_navigationManager.TryGetQueryString<string>("label", out var label))
        {
            Label = label;
        }
    }

    public void OnValidSubmit()
    {
        Submitted = true;
    }

}